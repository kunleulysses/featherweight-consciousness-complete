import React from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import { Provider } from 'react-redux';
import { PersistGate } from 'redux-persist/integration/react';
import { ThemeProvider, createTheme } from '@mui/material/styles';
import { CssBaseline, CircularProgress, Box } from '@mui/material';

import { store, persistor } from './store';
import { AuthProvider } from './contexts/AuthContext';
import { ProtectedRoute, AdminRoute, ResearcherRoute } from './components/auth/ProtectedRoute';
import { LoginCallback } from './components/auth/callbacks/LoginCallback';
import { LogoutCallback } from './components/auth/callbacks/LogoutCallback';
import { SilentCallbackPage } from './components/auth/callbacks/SilentCallback';

// Pages
import { LoginPage } from './pages/auth/LoginPage';
import { RegisterPage } from './pages/auth/RegisterPage';
import { DashboardPage } from './pages/dashboard/DashboardPage';
import { ProfilePage } from './pages/profile/ProfilePage';
import { DataPage } from './pages/data/DataPage';
import { ResearchPage } from './pages/research/ResearchPage';
import { Layout } from './components/layout/Layout';

const theme = createTheme({
  palette: {
    mode: 'light',
    primary: {
      main: '#1976d2',
    },
    secondary: {
      main: '#dc004e',
    },
  },
});

const LoadingFallback: React.FC = () => (
  <Box 
    display="flex" 
    justifyContent="center" 
    alignItems="center" 
    minHeight="100vh"
  >
    <CircularProgress />
  </Box>
);

function App() {
  return (
    <Provider store={store}>
      <PersistGate loading={<LoadingFallback />} persistor={persistor}>
        <ThemeProvider theme={theme}>
          <CssBaseline />
          <AuthProvider>
            <Router>
              <Routes>
                {/* Public routes */}
                <Route path="/login" element={<LoginPage />} />
                <Route path="/register" element={<RegisterPage />} />
                
                {/* OIDC callback routes */}
                <Route path="/auth/callback" element={<LoginCallback />} />
                <Route path="/auth/silent-callback" element={<SilentCallbackPage />} />
                <Route path="/logout" element={<LogoutCallback />} />
                
                {/* Protected routes */}
                <Route path="/" element={
                  <ProtectedRoute>
                    <Layout>
                      <DashboardPage />
                    </Layout>
                  </ProtectedRoute>
                } />
                
                <Route path="/dashboard" element={
                  <ProtectedRoute>
                    <Layout>
                      <DashboardPage />
                    </Layout>
                  </ProtectedRoute>
                } />
                
                <Route path="/profile" element={
                  <ProtectedRoute>
                    <Layout>
                      <ProfilePage />
                    </Layout>
                  </ProtectedRoute>
                } />
                
                {/* Researcher and Admin routes */}
                <Route path="/research" element={
                  <ResearcherRoute>
                    <Layout>
                      <ResearchPage />
                    </Layout>
                  </ResearcherRoute>
                } />
                
                {/* Admin only routes */}
                <Route path="/data" element={
                  <AdminRoute>
                    <Layout>
                      <DataPage />
                    </Layout>
                  </AdminRoute>
                } />
                
                {/* Fallback route */}
                <Route path="*" element={
                  <ProtectedRoute fallbackPath="/login">
                    <Layout>
                      <DashboardPage />
                    </Layout>
                  </ProtectedRoute>
                } />
              </Routes>
            </Router>
          </AuthProvider>
        </ThemeProvider>
      </PersistGate>
    </Provider>
  );
}

export default App;
