import dotenv from "dotenv";
dotenv.config();

import express from 'express';
import cors from 'cors';
import { createServer } from 'http';
import accessRoutes from './access-routes.js';
import dashboardRoutes from './dashboard-routes.js';
import memoryRoutes from './src/routes/memory.js';
import dataSourcesRoutes from './src/routes/datasources.js';
import { setupWebSocketServer } from './chat-service.js';

const app = express();
const server = createServer(app);

// Middleware
app.use(cors({
  origin: ['http://localhost:3000', 'http://localhost:4000', 'https://app.featherweight.world'],
  credentials: true
}));
app.use(express.json());

// Routes
app.use('/api', accessRoutes);
app.use('/api/dashboard', dashboardRoutes);
app.use('/api/memory', memoryRoutes);
app.use('/api/datasources', dataSourcesRoutes);

// Health checks
app.get('/api/health', (req, res) => {
  res.status(200).json({
    status: 'healthy',
    service: 'featherweight-backend',
    timestamp: new Date().toISOString(),
    features: {
      authentication: true,
      dashboard: true,
      chat: true,
      memory: true,
      datasources: true
    }
  });
});

app.get('/health', (req, res) => {
  res.status(200).send('OK');
});

// Setup WebSocket server for chat
setupWebSocketServer(server);

// Error handling middleware
app.use((err, req, res, next) => {
  console.error('Server error:', err);
  res.status(500).json({ 
    error: 'Internal server error',
    message: process.env.NODE_ENV === 'development' ? err.message : undefined
  });
});

// Start server
const PORT = process.env.PORT || 5000;
server.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`);
  console.log(`Health check available at http://localhost:${PORT}/api/health`);
  console.log(`WebSocket server ready for connections`);
});

export default app;
