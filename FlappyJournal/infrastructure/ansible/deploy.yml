---
- name: Deploy FlappyJournal Application
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    aws_region: "{{ aws_region | default('us-east-1') }}"
    project_name: "{{ project_name | default('flappyjournal') }}"
    environment: "{{ environment | default('staging') }}"
    image_tag: "{{ image_tag | default('latest') }}"
    
  tasks:
    - name: Set environment-specific variables
      set_fact:
        cluster_name: "{{ project_name }}-{{ environment }}-cluster"
        service_name: "{{ project_name }}-{{ environment }}-service"
        task_definition_family: "{{ project_name }}-{{ environment }}-app"
        ecr_repository: "{{ project_name }}-{{ environment }}"

    - name: Get current task definition
      community.aws.ecs_taskdefinition_info:
        task_definition: "{{ task_definition_family }}"
        region: "{{ aws_region }}"
      register: current_task_definition
      ignore_errors: true

    - name: Update ECS service with new image
      community.aws.ecs_service:
        name: "{{ service_name }}"
        cluster: "{{ cluster_name }}"
        task_definition: "{{ task_definition_family }}:{{ current_task_definition.revision | default(1) }}"
        desired_count: "{{ desired_count | default(2) }}"
        deployment_configuration:
          maximum_percent: 200
          minimum_healthy_percent: 50
          deployment_circuit_breaker:
            enable: true
            rollback: true
        enable_execute_command: true
        force_new_deployment: true
        region: "{{ aws_region }}"
        state: present
        wait: true
        wait_timeout: 900
      register: service_update

    - name: Wait for deployment to complete
      community.aws.ecs_service_info:
        name: "{{ service_name }}"
        cluster: "{{ cluster_name }}"
        details: true
        region: "{{ aws_region }}"
      register: service_status
      until: service_status.services[0].deployments | selectattr('status', 'equalto', 'PRIMARY') | list | length == 1
      retries: 30
      delay: 30

    - name: Verify service health
      uri:
        url: "{{ health_check_url | default('http://localhost/api/health') }}"
        method: GET
        status_code: 200
      retries: 10
      delay: 30
      when: health_check_url is defined

    - name: Display deployment status
      debug:
        msg: |
          Deployment completed successfully!
          Service: {{ service_name }}
          Cluster: {{ cluster_name }}
          Task Definition: {{ task_definition_family }}:{{ current_task_definition.revision | default(1) }}
          Image Tag: {{ image_tag }}
          Running Tasks: {{ service_status.services[0].running_count }}
          Desired Tasks: {{ service_status.services[0].desired_count }}
